// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TransportManagement.DataAccess;

#nullable disable

namespace TransportManagement.Migrations
{
    [DbContext(typeof(TransportManagementDbContext))]
    [Migration("20220517162725_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("TransportManagement.Models.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ArrivalAdress")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ArrivalCity")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("StatusProcess")
                        .HasColumnType("int");

                    b.Property<int>("TransportCompanyId")
                        .HasColumnType("int");

                    b.HasKey("OrderId");

                    b.HasIndex("TransportCompanyId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("TransportManagement.Models.TransportCompany", b =>
                {
                    b.Property<int>("TransportCompanyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<double>("PricePerKm")
                        .HasColumnType("double");

                    b.HasKey("TransportCompanyId");

                    b.ToTable("TransportCompanies");
                });

            modelBuilder.Entity("TransportManagement.Models.Order", b =>
                {
                    b.HasOne("TransportManagement.Models.TransportCompany", "TransportCompany")
                        .WithMany()
                        .HasForeignKey("TransportCompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TransportCompany");
                });
#pragma warning restore 612, 618
        }
    }
}
